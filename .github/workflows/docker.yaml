name: Docker Image Management

on:
  workflow_dispatch:
    inputs:
      DOCKER_LOGIN_YN: 
        description: '是否登录 Docker Hub (0 为不登录，1 为登录)'
        required: false
        default: '0'
  push:
    branches:
      - main

env:
  ALIYUN_REGISTRY: ${{ secrets.ALIYUN_REGISTRY }}
  ALIYUN_NAME_SPACE: ${{ secrets.ALIYUN_NAME_SPACE }}
  ALIYUN_REGISTRY_USER: ${{ secrets.ALIYUN_REGISTRY_USER }}
  ALIYUN_REGISTRY_PASSWORD: ${{ secrets.ALIYUN_REGISTRY_PASSWORD }}
  DOCKER_LOGIN_YN: ${{ github.event.inputs.DOCKER_LOGIN_YN || '0' }}
  HUBDOCKER_USER: ${{ secrets.HUBDOCKER_USER }}
  HUBDOCKER_PASSWORD: ${{ secrets.HUBDOCKER_PASSWORD }}

jobs:
  build-and-push:
    name: Build and Push Images
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Maximize build space
      uses: easimon/maximize-build-space@master
      with:
        root-reserve-mb: 2048
        swap-size-mb: 128
        remove-dotnet: 'true'
        remove-haskell: 'true'
        build-mount-path: '/var/lib/docker/'

    - name: Restart Docker
      run: sudo service docker restart

    - name: Docker Setup Buildx
      uses: docker/setup-buildx-action@v3

    - name: Docker Login to Docker Hub
      if: env.DOCKER_LOGIN_YN == '1'
      run: echo "${{ secrets.HUBDOCKER_PASSWORD }}" | docker login -u "${{ secrets.HUBDOCKER_USER }}" --password-stdin

    - name: Docker Login to Aliyun Registry
      run: echo "$ALIYUN_REGISTRY_PASSWORD" | docker login -u "$ALIYUN_REGISTRY_USER" --password-stdin "$ALIYUN_REGISTRY"

    - name: Process Images from images.txt
      run: |
        # 读取 images.txt 并处理每行
        while IFS= read -r image_line || [ -n "$image_line" ]; do
          # 忽略空行和注释
          echo "$image_line" | grep -qE '^\s*(#|$)' && continue

          # 处理镜像名称，如果包含冒号则分割命名空间和镜像名
          if [[ "$image_line" == *":"* ]]; then
            namespace_and_image=($image_line)
            image_name="${namespace_and_image[1]}"
          else
            image_name="$image_line"
          fi

          # 拉取镜像
          echo "Pulling Docker image: $image_line"
          docker pull "$image_line"

          # 打标签并推送到阿里云镜像仓库
          new_image_name="${ALIYUN_REGISTRY}/${ALIYUN_NAME_SPACE}/${image_name}"
          echo "Tagging and pushing to Aliyun registry: $new_image_name"
          docker tag "$image_line" "$new_image_name"
          docker push "$new_image_name"

          # 清理镜像
          echo "Cleaning up local images: $image_line and $new_image_name"
          docker rmi "$image_line" "$new_image_name"
        done < images.txt

    - name: Display Disk Usage
      run: df -h
